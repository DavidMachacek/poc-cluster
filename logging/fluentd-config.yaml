apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: kube-logging
data:
  fluentd-config: |
    # Ignore fluentd own events
    <match fluent.**>
      @type null
    </match>

    # TCP input to receive logs from the forwarders
    #<source>
    #  @type forward
    #  bind 0.0.0.0
    #  port 24224
    #</source>

    # HTTP input for the liveness and readiness probes
    #<source>
    #  @type http
    #  bind 0.0.0.0
    #  port 9880
    #</source>

    # Throw the healthcheck to the standard output instead of forwarding it
    #<match fluentd.healthcheck>
    #  @type stdout
    #</match>

    <source>
      @type tail
      path /var/log/containers/informer*.log
      pos_file /var/log/fluentd-containers.log.pos      
      exclude_path ["/var/log/containers/fluentd*"]
      tag kubernetes.*
      read_from_head true
      format /^(?<time>([^\]]+)) (?<source>(stdout|stderr)) F\ (?<Message>([^\n]+))/
      <parse>
        @type json
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </parse>      
    </source>

    <source>
      @type tail
      path /var/log/containers/hello-world-consumer*.log
      pos_file /var/log/fluentd-containers.log.pos      
      exclude_path ["/var/log/containers/fluentd*"]
      tag kubernetes.*
      read_from_head true
      format /^(?<time>([^\]]+)) (?<source>(stdout|stderr)) F\ (?<Message>([^\n]+))/
      <parse>
        @type json
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </parse>      
    </source>
    
    # we use kubernetes metadata plugin to add metadatas to the log
    <filter kubernetes.**>
        @type kubernetes_metadata
    </filter>

    # we send the logs to Elasticsearch
    <match kubernetes.**>
        @type elasticsearch
        include_tag_key true
        host "#{ENV['FLUENT_ELASTICSEARCH_HOST'] || 'elasticsearch.kube-logging.svc.cluster.local'}"
        port "#{ENV['FLUENT_ELASTICSEARCH_PORT'] || '9200'}"
        scheme "#{ENV['FLUENT_ELASTICSEARCH_SCHEME'] || 'http'}"
        ssl_verify "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERIFY'] || 'true'}"
        user "#{ENV['FLUENT_ELASTICSEARCH_USER']}" # remove these lines if not needed
        password "#{ENV['FLUENT_ELASTICSEARCH_PASSWORD']}" # remove these lines if not needed
        reload_connections true
        logstash_prefix logstash
        logstash_format true
        <buffer>
            flush_thread_count 8
            flush_interval 5s
            chunk_limit_size 2M
            queue_limit_length 32
            retry_max_interval 30
            retry_forever true
        </buffer>
    </match>